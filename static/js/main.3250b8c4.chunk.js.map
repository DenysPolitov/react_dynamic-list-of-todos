{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setShownTodoId","className","map","todo","userId","completed","title","type","onClick","id","TodoFilter","setTodosToShow","useState","statusFilter","setStatusFilter","searchQuery","setSearchQuery","useEffect","filteredTodos","filter","includes","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getTodo","find","Loader","TodoModal","todoId","loading","setLoading","setTodo","user","setUser","loadData","a","result","href","email","name","App","setTodos","todosToShow","shownTodoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3250b8c4.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setShownTodoId: (value: null | number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, setShownTodoId }) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.userId}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>{todo.title}</p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setShownTodoId(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className=\"far fa-eye\" />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n      {/* <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n      <tr data-cy=\"todo\" className=\"has-background-info-light\">\n        <td className=\"is-vcentered\">2</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">quis ut nam facilis et officia qui</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">1</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">delectus aut autem</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">6</td>\n        <td className=\"is-vcentered\" />\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-danger\">\n            qui ullam ratione quibusdam voluptatem quia omnis\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr>\n\n      <tr data-cy=\"todo\" className=\"\">\n        <td className=\"is-vcentered\">8</td>\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className=\"has-text-success\">quo adipisci enim quam ut ab</p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button data-cy=\"selectButton\" className=\"button\" type=\"button\">\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        </td>\n      </tr> */}\n    </tbody>\n  </table>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setTodosToShow: (value: Todo[]) => void;\n};\n\n// enum TodosFilterType {\n//   'active',\n//   'completed',\n//   'all',\n// }\n\nexport const TodoFilter: React.FC<Props> = ({ todos, setTodosToShow }) => {\n  const [statusFilter, setStatusFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  useEffect(() => {\n    let filteredTodos;\n\n    switch (statusFilter) {\n      case ('active'):\n        filteredTodos = todos.filter(todo => !todo.completed);\n        break;\n      case ('completed'):\n        filteredTodos = todos.filter(todo => todo.completed);\n        break;\n      default:\n        filteredTodos = todos;\n    }\n\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.includes(searchQuery));\n\n    setTodosToShow(filteredTodos);\n  }, [statusFilter, searchQuery]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatusFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => setSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchQuery && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getTodo = (id: number) => getTodos()\n  .then(todos => todos.find(todo => todo.id === id) || null);\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getTodo, getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todoId: number;\n  setShownTodoId: (value: null | number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todoId, setShownTodoId }) => {\n  const [loading, setLoading] = useState(true);\n  const [todo, setTodo] = useState<null | Todo>(null);\n  const [user, setUser] = useState<null | User>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setTodo(await getTodo(todoId));\n\n      setUser(await getTodo(todoId)\n        .then(result => {\n          if (result) {\n            return getUser(result.userId);\n          }\n\n          return null;\n        }));\n      setLoading(false);\n    };\n\n    loadData();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoId}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setShownTodoId(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosToShow, setTodosToShow] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [shownTodoId, setShownTodoId] = useState<null | number>(null);\n\n  useEffect(() => {\n    const loadData = async () => {\n      setTodos(await getTodos());\n      setTodosToShow(await getTodos());\n      setLoading(false);\n    };\n\n    loadData();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter todos={todos} setTodosToShow={setTodosToShow} />\n            </div>\n\n            <div className=\"block\">\n              {(loading && <Loader />)\n              || <TodoList todos={todosToShow} setShownTodoId={setShownTodoId} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {shownTodoId && <TodoModal todoId={shownTodoId} setShownTodoId={setShownTodoId} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}